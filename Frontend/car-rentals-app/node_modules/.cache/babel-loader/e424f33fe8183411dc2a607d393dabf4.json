{"ast":null,"code":"var _jsxFileName = \"E:\\\\2022\\\\CarRentalAppReactNodejs-master\\\\Frontend\\\\car-rentals-app\\\\src\\\\components\\\\CarsTable.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport TableHead from \"./common/TableHead\";\nimport TableBody from \"./common/TableBody\";\nimport TableSelectFuel from \"./common/TableSelect\";\nimport Pagination from \"./Pagination\";\nimport NewRentals from \"./NewRentals\";\nimport { getCurrentUser, getCars, postRental } from \"../RentalServices\";\n\nclass CarsTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      carsArr: \"\",\n      carsPerPage: 4,\n      currentPage: 1,\n      selectFuel: \"\",\n      carForRent: \"\"\n    };\n\n    this.filterCars = () => {\n      let filteredCars = this.state.selectFuel ? this.state.carsArr.filter(car => car.fuelType === this.state.selectFuel) : this.state.carsArr;\n      filteredCars = filteredCars.filter(car => car.isAvailable);\n      return filteredCars;\n    };\n\n    this.handleSelecetFuel = fuel => {\n      this.setState({\n        selectFuel: fuel\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleRentBtn = car => {\n      this.setState({\n        carForRent: car\n      });\n    };\n\n    this.handleRental = (bool, rentalDays) => {\n      if (bool) {\n        postRental(this.state.carForRent, rentalDays, response => {\n          if (response.status >= 400) {\n            this.setState({\n              carForRent: \"\"\n            });\n          } else {\n            const cars = [...this.state.carsArr];\n            const ind = cars.indexOf(this.state.carForRent);\n            cars[ind].isAvailable = false;\n            this.setState({\n              carForRent: \"\",\n              carsArr: cars\n            });\n          }\n        });\n      } else {\n        this.setState({\n          carForRent: \"\"\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    getCars(data => {\n      data = data.filter(car => {\n        return car.isAvailable;\n      });\n      this.setState({\n        carsArr: data\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          carsArr = _this$state.carsArr,\n          selectFuel = _this$state.selectFuel,\n          carsPerPage = _this$state.carsPerPage,\n          currentPage = _this$state.currentPage,\n          carForRent = _this$state.carForRent;\n    const user = getCurrentUser();\n\n    if (!carsArr) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, user && React.createElement(Link, {\n        to: \"/cars/add\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Add new car\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"No cars in the databasa!\"));\n    }\n\n    const filteredCars = this.filterCars();\n\n    if (carForRent) {\n      return React.createElement(NewRentals, {\n        handleRental: this.handleRental,\n        car: carForRent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"row m-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(TableSelectFuel, {\n      fuel: selectFuel,\n      setFuel: this.handleSelecetFuel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, user && React.createElement(Link, {\n      to: \"/cars/add\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Add new car\"), React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(TableBody, {\n      cars: filteredCars,\n      currentPage: currentPage,\n      carsPerPage: carsPerPage,\n      user: user,\n      handleRentBtn: this.handleRentBtn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(Pagination, {\n      currentPage: currentPage,\n      carsPerPage: carsPerPage,\n      carsCount: filteredCars.length,\n      handlePageChange: this.handlePageChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default CarsTable;","map":{"version":3,"sources":["E:/2022/CarRentalAppReactNodejs-master/Frontend/car-rentals-app/src/components/CarsTable.jsx"],"names":["React","Component","Link","TableHead","TableBody","TableSelectFuel","Pagination","NewRentals","getCurrentUser","getCars","postRental","CarsTable","state","carsArr","carsPerPage","currentPage","selectFuel","carForRent","filterCars","filteredCars","filter","car","fuelType","isAvailable","handleSelecetFuel","fuel","setState","handlePageChange","page","handleRentBtn","handleRental","bool","rentalDays","response","status","cars","ind","indexOf","componentDidMount","data","render","user","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport TableHead from \"./common/TableHead\";\nimport TableBody from \"./common/TableBody\";\nimport TableSelectFuel from \"./common/TableSelect\";\nimport Pagination from \"./Pagination\";\nimport NewRentals from \"./NewRentals\";\nimport { getCurrentUser, getCars, postRental } from \"../RentalServices\";\n\nclass CarsTable extends Component {\n  state = {\n    carsArr: \"\",\n    carsPerPage: 4,\n    currentPage: 1,\n    selectFuel: \"\",\n    carForRent: \"\"\n  };\n  componentDidMount() {\n    getCars(data => {\n      data = data.filter(car => {\n        return car.isAvailable;\n      });\n      this.setState({\n        carsArr: data\n      });\n    });\n  }\n  filterCars = () => {\n    let filteredCars = this.state.selectFuel\n      ? this.state.carsArr.filter(car => car.fuelType === this.state.selectFuel)\n      : this.state.carsArr;\n    filteredCars = filteredCars.filter(car => car.isAvailable);\n    return filteredCars;\n  };\n  handleSelecetFuel = fuel => {\n    this.setState({ selectFuel: fuel });\n  };\n  handlePageChange = page => {\n    this.setState({ currentPage: page });\n  };\n  handleRentBtn = car => {\n    this.setState({ carForRent: car });\n  };\n  handleRental = (bool, rentalDays) => {\n    if (bool) {\n      postRental(this.state.carForRent, rentalDays, response => {\n        if (response.status >= 400) {\n          this.setState({ carForRent: \"\" });\n        } else {\n          const cars = [...this.state.carsArr];\n          const ind = cars.indexOf(this.state.carForRent);\n          cars[ind].isAvailable = false;\n          this.setState({ carForRent: \"\", carsArr: cars });\n        }\n      });\n    } else {\n      this.setState({ carForRent: \"\" });\n    }\n  };\n  render() {\n    const {\n      carsArr,\n      selectFuel,\n      carsPerPage,\n      currentPage,\n      carForRent\n    } = this.state;\n    const user = getCurrentUser();\n\n    if (!carsArr) {\n      return (\n        <div>\n          {user && (\n            <Link to=\"/cars/add\" className=\"btn btn-primary\">\n              Add new car\n            </Link>\n          )}\n          <p>No cars in the databasa!</p>\n        </div>\n      );\n    }\n    const filteredCars = this.filterCars();\n    if (carForRent) {\n      return <NewRentals handleRental={this.handleRental} car={carForRent} />;\n    }\n    return (\n      <div className=\"row m-3\">\n        <div className=\"col\">\n          <TableSelectFuel fuel={selectFuel} setFuel={this.handleSelecetFuel} />\n        </div>\n        <div className=\"col\">\n          {user && (\n            <Link to=\"/cars/add\" className=\"btn btn-primary\">\n              Add new car\n            </Link>\n          )}\n          <table className=\"table\">\n            <TableHead />\n            <TableBody\n              cars={filteredCars}\n              currentPage={currentPage}\n              carsPerPage={carsPerPage}\n              user={user}\n              handleRentBtn={this.handleRentBtn}\n            />\n          </table>\n          <Pagination\n            currentPage={currentPage}\n            carsPerPage={carsPerPage}\n            carsCount={filteredCars.length}\n            handlePageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CarsTable;\n"]},"metadata":{},"sourceType":"module"}